---
project_influx_service_fqdn: influx.i.trombik.org
# _______________________________________________grafana
project_grafana_port: 3000
apt_repo_keys_to_add:
  - https://packages.grafana.com/gpg.key
apt_repo_enable_apt_transport_https: yes
apt_repo_to_add:
  - "deb https://packages.grafana.com/oss/deb stable main"
redhat_repo:
  grafana:
    baseurl: https://packages.grafana.com/oss/rpm
    gpgkey: https://packages.grafana.com/gpg.key
    gpgcheck: yes
    enabled: yes

grafana_extra_packages: []
grafana_plugins:
  - name: grafana-clock-panel
    state: absent
os_grafana_flags:
  FreeBSD: |
    grafana_conf={{ grafana_conf_file }}
  OpenBSD: ""
  Debian: ""

grafana_flags: "{{ os_grafana_flags[ansible_os_family] }}"
grafana_addr: 127.0.0.1
grafana_provisioning_files:
  - name: datasources/influxdb.yml
    state: present
    format: yaml
    content:
      apiVersion: 1
      datasources:
        - name: InfluxDB
          type: influxdb
          access: proxy
          database: mydatabase
          user: read
          password: read
          url: http://{{ influxdb_bind_address }}
          jsonData:
            httpMode: GET
  - name: provisioning/dashboards/default.yml
    state: present
    # raw text
    content: |
      # Managed by ansible
      apiVersion: 1
      providers:
        - name: a unique provider name
          orgId: 1
          folder: Test folder
          type: file
          disableDeletion: false
          editable: true
          updateIntervalSeconds: 10
          options:
            path: {{ grafana_provisioning_dir }}/dashboards/json
  - name: provisioning/dashboards/json/empty.js
    content: |
      {}
grafana_conf_file: "{{ grafana_conf_dir }}/config.ini"

grafana_config: |
  [paths]
  data = {{ grafana_db_dir }}
  logs = {{ grafana_log_dir }}
  plugins = /var/db/grafana/plugins
  provisioning = {{ grafana_provisioning_dir }}
  [server]
  [database]
  log_queries =
  [session]
  [dataproxy]
  [analytics]
  [security]
  admin_user = {{ grafana_admin_user }}
  admin_password = {{ grafana_admin_password }}
  disable_gravatar = true
  [snapshots]
  [dashboards]
  [users]
  [auth]
  [auth.anonymous]
  [auth.github]
  [auth.google]
  [auth.generic_oauth]
  [auth.grafana_com]
  [auth.proxy]
  [auth.basic]
  [auth.ldap]
  [smtp]
  [emails]
  [log]
  [log.console]
  [log.file]
  [log.syslog]
  [alerting]
  [metrics]
  [metrics.graphite]
  [tracing.jaeger]
  [grafana_com]
  [external_image_storage]
  [external_image_storage.s3]
  [external_image_storage.webdav]
  [external_image_storage.gcs]
  [external_image_storage.azure_blob]
  [external_image_storage.local]
# _______________________________________________nginx
os_project_www_root_dir:
  OpenBSD: /var/www/htdocs
  FreeBSD: /usr/local/www/nginx
  Debian: /var/www/html
  RedHat: /usr/share/nginx/html
project_www_root_dir: "{{ os_project_www_root_dir[ansible_os_family] }}"

nginx_config: |
  user {{ nginx_user }};
  worker_processes 1;
  error_log {{ nginx_error_log_file }};
  events {
    worker_connections 1024;
  }
  http {
    include {{ nginx_conf_dir }}/mime.types;
    access_log {{ nginx_access_log_file }};
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    gzip on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;

    upstream influxdb {
      server {{ influxdb_bind_address }};
      keepalive 10;
    }

    upstream grafana {
      server localhost:{{ project_grafana_port }};
      keepalive 10;
    }

    server {
      listen {{ project_ingress_address }}:80;
      server_name {{ project_influx_service_fqdn }};
      root {{ project_www_root_dir }};
      location / {
        proxy_pass http://grafana/;
        proxy_redirect default;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 5;
        proxy_send_timeout 10;
        proxy_read_timeout 20;
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
      }
    }
  }

# _______________________________________________influxdb

influxdb_bind_address: 127.0.0.1:8086
influxdb_databases:
  - database_name: mydatabase
    state: present
influxdb_users:
  - user_name: foo
    user_password: PassWord
    grants:
      - database: mydatabase
        privilege: ALL
  - user_name: write_only
    user_password: write_only
    grants:
      - database: mydatabase
        privilege: WRITE
  - user_name: read_only
    user_password: read_only
    grants:
      - database: mydatabase
        privilege: READ
  - user_name: none
    user_password: none
  - user_name: bar
    state: absent
influxdb_config: |
  reporting-disabled = true
  # this one is bind address for backup process
  bind-address = "127.0.0.1:8088"
  [meta]
    dir = "{{ influxdb_db_dir }}/meta"
  [data]
    dir = "{{ influxdb_db_dir }}/data"
    wal-dir = "{{ influxdb_db_dir }}/wal"
  [coordinator]
  [retention]
  [shard-precreation]
  [monitor]
  [http]
    auth-enabled = true
    bind-address = "{{ influxdb_bind_address }}"
    access-log-path = "{{ influxdb_log_dir }}/access.log"
  [ifql]
  [logging]
  [subscriber]
  [[graphite]]
  [[collectd]]
  [[opentsdb]]
  [[udp]]
  [tls]
